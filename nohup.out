Checking new store skins for notifys...
Fetching Valorant version !

Logged in as: Neonâš¡#3276

 BOT IS READY !
Version: 3.1.0-aiohttp
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 168, in point
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'point' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !

Logged in as: Neonâš¡#3276

 BOT IS READY !
Version: 3.1.0-aiohttp
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching weapons skin !
Fetching tier skin !
Fetching bundles !
Fetching Playercards !
Fetching currencies !
Fetching Player titles !
Fetching Sprays !
Fetching buddies !
Fetching mission !
Fetching Contracts !
Loaded Cache
Updated cache
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Fetching Valorant version !
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 114, in login
    await interaction.response.send_modal(modal)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 831, in send_modal
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'login' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 239, in battlepass
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 218, in request
    raise HTTPException(response, data)
discord.errors.HTTPException: 400 Bad Request (error code: 40060): Interaction has already been acknowledged.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'battlepass' raised an exception: HTTPException: 400 Bad Request (error code: 40060): Interaction has already been acknowledged.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 114, in login
    await interaction.response.send_modal(modal)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 831, in send_modal
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'login' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
Task exception was never retrieved
future: <Task finished name='CommandTree-invoker' coro=<CommandTree._from_interaction.<locals>.wrapper() done, defined at /usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py:935> exception=TypeError('Subscripted generics cannot be used with class and instance checks')>
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 640, in _do_call
    return await self._callback(self.binding, interaction, **params)  # type: ignore
  File "/home/valbot/cogs/valorant.py", line 143, in store
    await interaction.response.defer(ephemeral=is_private_message)
  File "/usr/local/lib/python3.8/dist-packages/discord/interactions.py", line 571, in defer
    await adapter.create_interaction_response(
  File "/usr/local/lib/python3.8/dist-packages/discord/webhook/async_.py", line 216, in request
    raise NotFound(response, data)
discord.errors.NotFound: 404 Not Found (error code: 10062): Unknown interaction

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1104, in call
    await command._invoke_with_namespace(interaction, namespace)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 666, in _invoke_with_namespace
    return await self._do_call(interaction, transformed_values)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/commands.py", line 659, in _do_call
    raise CommandInvokeError(self, e) from e
discord.app_commands.errors.CommandInvokeError: Command 'store' raised an exception: NotFound: 404 Not Found (error code: 10062): Unknown interaction

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 937, in wrapper
    await self.call(interaction)
  File "/usr/local/lib/python3.8/dist-packages/discord/app_commands/tree.py", line 1107, in call
    await self.on_error(interaction, e)
  File "/home/valbot/cogs/errors.py", line 64, in on_app_command_error
    elif isinstance(error, Union[AppCommandNotFound, MissingPermissions, BotMissingPermissions]):
  File "/usr/lib/python3.8/typing.py", line 769, in __instancecheck__
    return self.__subclasscheck__(type(obj))
  File "/usr/lib/python3.8/typing.py", line 777, in __subclasscheck__
    raise TypeError("Subscripted generics cannot be used with"
TypeError: Subscripted generics cannot be used with class and instance checks
